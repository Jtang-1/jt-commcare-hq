--- 
+++ 
@@ -1,49 +1,63 @@
-hqDefine('hqwebapp/js/bootstrap3/solutions-feature-request', [
-    "jquery", "jquery-form/dist/jquery.form.min", "hqwebapp/js/bootstrap3/hq.helpers",
-], function ($) {
+hqDefine('hqwebapp/js/bootstrap5/solutions-feature-request', [
+    "jquery",
+    "es6!hqwebapp/js/bootstrap5_loader",
+    "jquery-form/dist/jquery.form.min",
+    "hqwebapp/js/bootstrap5/hq.helpers",
+], function ($, bootstrap) {
+    'use strict';
     $(function () {
-        var $hqwebappRequestReportModal = $('#modalSolutionsFeatureRequest'),
-            $hqwebappRequestReportForm = $('#hqwebapp-requestReportForm'),
-            $hqwebappRequestReportSubmit = $('#request-report-submit'),
-            $hqwebappRequestReportCancel = $('#request-report-cancel'),
-            $ccFormGroup = $("#request-report-cc-form-group"),
-            $emailFormGroup = $("#request-report-email-form-group"),
-            $issueSubjectFormGroup = $("#request-report-subject-form-group"),
-            isRequestReportSubmitting = false;
+        let self = {};
 
-        var resetForm = function () {
-            $hqwebappRequestReportForm.find("button[type='submit']").button('reset');
-            $hqwebappRequestReportForm.resetForm();
-            $hqwebappRequestReportCancel.enableButton();
-            $hqwebappRequestReportSubmit.button('reset');
-            $ccFormGroup.removeClass('has-error has-feedback');
-            $ccFormGroup.find(".label-danger").addClass('hide');
-            $emailFormGroup.removeClass('has-error has-feedback');
-            $emailFormGroup.find(".label-danger").addClass('hide');
+        self.$requestReportModalElement = $('#modalSolutionsFeatureRequest');
+        if (self.$requestReportModalElement.length === 0) {
+            // If the modal element is not present on the page, don't continue
+            return;
+        }
+
+        self.requestReportModal = new bootstrap.Modal(self.$requestReportModalElement);
+        self.$hqwebappRequestReportForm = $('#hqwebapp-requestReportForm');
+        self.$hqwebappRequestReportSubmit = $('#request-report-submit');
+        self.$hqwebappRequestReportCancel = $('#request-report-cancel');
+        self.$ccFormGroup = $("#request-report-cc-form-group");
+        self.$emailFormGroup = $("#request-report-email-form-group");
+        self.$issueSubjectFormGroup = $("#request-report-subject-form-group");
+        self.isRequestReportSubmitting = false;
+
+        self.resetForm = function () {
+            self.$hqwebappRequestReportForm.find("button[type='submit']").changeButtonState('reset');
+            self.$hqwebappRequestReportForm.resetForm();
+            self.$hqwebappRequestReportCancel.enableButton();
+            self.$hqwebappRequestReportSubmit.changeButtonState('reset');
+            self.$ccFormGroup.removeClass('has-error has-feedback');
+            self.$ccFormGroup.find(".label-danger").addClass('hide');
+            self.$emailFormGroup.removeClass('has-error has-feedback');
+            self.$emailFormGroup.find(".label-danger").addClass('hide');
         };
 
-        $hqwebappRequestReportModal.on('shown.bs.modal', function () {
+        self.$requestReportModalElement.on('shown.bs.modal', function () {
             $("input#request-report-subject").focus();
         });
 
-        $hqwebappRequestReportForm.submit(function () {
-            var isDescriptionEmpty = !$("#request-report-subject").val() && !$("#request-report-message").val();
+        self.$hqwebappRequestReportForm.submit(function (e) {
+            e.preventDefault();
+
+            let isDescriptionEmpty = !$("#request-report-subject").val() && !$("#request-report-message").val();
             if (isDescriptionEmpty) {
-                highlightInvalidField($issueSubjectFormGroup);
+                self.highlightInvalidField(self.$issueSubjectFormGroup);
             }
 
-            var emailAddress = $(this).find("input[name='email']").val();
-            if (emailAddress && !IsValidEmail(emailAddress)) {
-                highlightInvalidField($emailFormGroup);
+            let emailAddress = $(this).find("input[name='email']").val();
+            if (emailAddress && !self.isValidEmail(emailAddress)) {
+                self.highlightInvalidField(self.$emailFormGroup);
                 return false;
             }
 
-            var emailAddresses = $(this).find("input[name='cc']").val();
+            let emailAddresses = $(this).find("input[name='cc']").val();
             emailAddresses = emailAddresses.replace(/ /g, "").split(",");
-            for (var index in emailAddresses) {
-                var email = emailAddresses[index];
-                if (email && !IsValidEmail(email)) {
-                    highlightInvalidField($ccFormGroup);
+            for (let index in emailAddresses) {
+                let email = emailAddresses[index];
+                if (email && !self.isValidEmail(email)) {
+                    self.highlightInvalidField(self.$ccFormGroup);
                     return false;
                 }
             }
@@ -51,57 +65,61 @@
                 return false;
             }
 
-            if (!isRequestReportSubmitting && $hqwebappRequestReportSubmit.text() === $hqwebappRequestReportSubmit.data("success-text")) {
-                $hqwebappRequestReportModal.modal("hide");
-            } else if (!isRequestReportSubmitting) {
-                $hqwebappRequestReportCancel.disableButtonNoSpinner();
-                $hqwebappRequestReportSubmit.button('loading');
+            if (!self.isRequestReportSubmitting && self.$hqwebappRequestReportSubmit.text() ===
+                    self.$hqwebappRequestReportSubmit.data("success-text")) {
+                self.requestReportModal.hide();
+            } else if (!self.isRequestReportSubmitting) {
+                self.$hqwebappRequestReportCancel.disableButtonNoSpinner();
+                self.$hqwebappRequestReportSubmit.changeButtonState('loading');
                 $(this).ajaxSubmit({
                     type: "POST",
                     url: $(this).attr('action'),
-                    beforeSerialize: hqwebappRequestReportBeforeSerialize,
-                    beforeSubmit: hqwebappRequestReportBeforeSubmit,
-                    success: hqwebappRequestReportSucccess,
-                    error: hqwebappRequestReportError,
+                    beforeSerialize: self.hqwebappRequestReportBeforeSerialize,
+                    beforeSubmit: self.hqwebappRequestReportBeforeSubmit,
+                    success: self.hqwebappRequestReportSuccess,
+                    error: self.hqwebappRequestReportError,
                 });
             }
             return false;
         });
 
-        function IsValidEmail(email) {
-            var regex = /^([a-zA-Z0-9_.+-])+@(([a-zA-Z0-9-])+\.)+([a-zA-Z0-9]{2,4})+$/;
+        self.isValidEmail = function (email) {
+            let regex = /^([a-zA-Z0-9_.+-])+@(([a-zA-Z0-9-])+\.)+([a-zA-Z0-9]{2,4})+$/;
             return regex.test(email);
-        }
+        };
 
-        function hqwebappRequestReportBeforeSerialize($form) {
+        self.hqwebappRequestReportBeforeSerialize = function ($form) {
             $form.find("#request-report-url").val(location.href);
-        }
+        };
 
-        function hqwebappRequestReportBeforeSubmit() {
-            isRequestReportSubmitting = true;
-        }
+        self.hqwebappRequestReportBeforeSubmit = function () {
+            self.isRequestReportSubmitting = true;
+        };
 
-        function hqwebappRequestReportSucccess() {
-            isRequestReportSubmitting = false;
-            $hqwebappRequestReportForm.find("button[type='submit']").button('success').removeClass('btn-danger').addClass('btn-primary');
-            $hqwebappRequestReportModal.one('hidden.bs.modal', function () {
-                resetForm();
+        self.hqwebappRequestReportSuccess = function () {
+            self.isRequestReportSubmitting = false;
+            self.$requestReportModalElement.one('hidden.bs.modal', function () {
+                self.resetForm();
             });
-        }
+            self.$hqwebappRequestReportForm.find("button[type='submit']")
+                .changeButtonState('success')
+                .removeClass('btn-danger').addClass('btn-primary');
+        };
 
-        function hqwebappRequestReportError() {
-            isRequestReportSubmitting = false;
-            $hqwebappRequestReportForm.find("button[type='submit']").button('error').removeClass('btn-primary').addClass('btn-danger');
-            $hqwebappRequestReportCancel.enableButton();
-        }
+        self.hqwebappRequestReportError = function () {
+            self.isRequestReportSubmitting = false;
+            self.$hqwebappRequestReportForm.find("button[type='submit']").changeButtonState('error')
+                .removeClass('btn-primary').addClass('btn-danger');
+            self.$hqwebappRequestReportCancel.enableButton();
+        };
 
-        function highlightInvalidField($element) {
+        self.highlightInvalidField = function ($element) {
             $element.addClass('has-error has-feedback');
             $element.find(".label-danger").removeClass('hide');
             $element.find("input").focus(function () {
                 $element.removeClass("has-error has-feedback");
                 $element.find(".label-danger").addClass('hide');
             });
-        }
+        };
     });
 });
